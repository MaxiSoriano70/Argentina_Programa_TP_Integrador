package Modelo;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;

public class Usuario extends Persona{
	
	ArrayList<Partido> partidos = new ArrayList<>();

	public Usuario(int idPersona, String nombreCompleto, String dni) {
		super(idPersona, nombreCompleto, dni);
	}
	
	public ArrayList<Partido> setPartidos(String ruta){
		try {
			for(String linea:Files.readAllLines(Paths.get(ruta))) {
				boolean[] pronostico=new boolean[3];
				String l=linea.split(";")[0];
				pronostico[0]=Boolean.valueOf(linea.split(";")[1]);
				pronostico[1]=Boolean.valueOf(linea.split(";")[2]);
				pronostico[2]=Boolean.valueOf(linea.split(";")[3]);
				String v=linea.split(";")[3];
				Partido partido=generar_partido(l,v,pronostico);
				this.partidos.add(partido);
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return this.partidos;
		
	}
	
	public Partido generar_partido(String l,String v,boolean[] pronostico) {
		Equipo local=new Equipo(l);
		Equipo visitante=new Equipo(v);
		Pronostico prode=new Pronostico(local,visitante,pronostico);
		prode.resultado();
		return prode;
	}
	
	
	
	public ArrayList<Partido> getPartidos() {
		return partidos;
	}

	public void mostrar_Partidos() {
		ArrayList<Partido> partidos = this.getPartidos();
		for(int i=0;i<partidos.size();i++) {
			System.out.println(partidos.get(i).getLocal()+" vs "+partidos.get(i).getVisitante()+" Ganador: "+partidos.get(i).getResultado());
		}
	}
}
